{"ast":null,"code":"var _jsxFileName = \"/home/bhavya/docker/pythonDjango/LH2React/src/components/Home/Home.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from \"react\";\nimport DestList from \"./DestList\";\nimport Card from \"../UI/Card/Card\";\nimport classes from \"./Home.module.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Home = props => {\n  _s();\n  const [destList, setDestList] = useState([]);\n  const [destSearchWord, setDestSearchWord] = useState(\"Denmark\");\n  const searchWordref = useRef();\n  const fetchSearchData = async enteredWord => {\n    const urlPath = \"http://127.0.0.1:8000/get-data\";\n    const headers = new Headers();\n    headers.set(\"Content-Type\", \"application/json\");\n    try {\n      const jsonCreds = {\n        name: enteredWord\n      };\n      const response = await fetch(urlPath, {\n        method: \"POST\",\n        headers: headers,\n        body: JSON.stringify(jsonCreds)\n      });\n      if (response.ok) {\n        const data = await response.json();\n        setDestList(data);\n      }\n    } catch (error) {\n      console.log(\"Error fetching data from Backend:\", error);\n    }\n  };\n  useEffect(() => {\n    fetchSearchData(destSearchWord);\n  }, [destSearchWord]);\n  if (destList.length !== 0) {\n    console.log(destList.message[0].dest_desc);\n  }\n  const destListMapped = destList.length !== 0 ? /*#__PURE__*/_jsxDEV(DestList, {\n    name: destList['message'].name,\n    desc: destList['message'].desc\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 9\n  }, this) : \"\";\n  const songSearchHandler = () => {\n    setDestSearchWord(searchWordref.current.value);\n  };\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Card, {\n      className: classes.home,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          placeholder: \"Enter a Destination name\",\n          ref: searchWordref\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: songSearchHandler,\n          children: \"Search\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"List of Top Places from Api\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 5\n  }, this);\n};\n_s(Home, \"OxN7vzL1xMgThOjCxENzVyK5+4s=\");\n_c = Home;\nexport default Home;\nvar _c;\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"names":["React","useState","useEffect","useRef","DestList","Card","classes","jsxDEV","_jsxDEV","Home","props","_s","destList","setDestList","destSearchWord","setDestSearchWord","searchWordref","fetchSearchData","enteredWord","urlPath","headers","Headers","set","jsonCreds","name","response","fetch","method","body","JSON","stringify","ok","data","json","error","console","log","length","message","dest_desc","destListMapped","desc","fileName","_jsxFileName","lineNumber","columnNumber","songSearchHandler","current","value","Fragment","children","className","home","placeholder","ref","onClick","_c","$RefreshReg$"],"sources":["/home/bhavya/docker/pythonDjango/LH2React/src/components/Home/Home.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from \"react\";\nimport DestList from \"./DestList\";\nimport Card from \"../UI/Card/Card\";\nimport classes from \"./Home.module.css\";\n\nconst Home = (props) => {\n  const [destList, setDestList] = useState([]);\n  const [destSearchWord, setDestSearchWord] = useState(\"Denmark\");\n  const searchWordref = useRef();\n\n  const fetchSearchData = async (enteredWord) => {\n    const urlPath = \"http://127.0.0.1:8000/get-data\";\n    const headers = new Headers();\n    headers.set(\"Content-Type\", \"application/json\");\n    try {\n      const jsonCreds = {\n        name: enteredWord,\n      };\n      const response = await fetch(urlPath, {\n        method: \"POST\",\n        headers: headers,\n        body: JSON.stringify(jsonCreds),\n      });\n\n      if (response.ok) {\n        const data = await response.json();\n        setDestList(data);\n      }\n    } catch (error) {\n      console.log(\"Error fetching data from Backend:\", error);\n    }\n  };\n\n  useEffect(() => {\n    fetchSearchData(destSearchWord);\n  }, [destSearchWord]);\n\n  if(destList.length !== 0){\n    console.log(destList.message[0].dest_desc)\n  }\n  \n  const destListMapped = destList.length !== 0 ?\n        <DestList\n          name={destList['message'].name}\n          desc={destList['message'].desc}\n        /> : \"\";\n\n  const songSearchHandler = () => {\n    setDestSearchWord(searchWordref.current.value);\n  };\n\n  return (\n    <React.Fragment>\n      <Card className={classes.home}>\n        <div>\n          <input placeholder=\"Enter a Destination name\" ref={searchWordref} />\n          <button onClick={songSearchHandler}>Search</button>\n        </div>\n        <h1>List of Top Places from Api</h1>\n        {/* <ul>{destListMapped}</ul> */}\n      </Card>\n    </React.Fragment>\n  );\n};\n\nexport default Home;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}